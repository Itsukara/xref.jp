# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
# 導入・ログイン
# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
MySQL_インストール	# yum -y install mysql
MySQL_起動・停止	# service mysqld start
					# service mysqld stop
					# service mysqld status

Oracle_インストール	未
Oracle_起動・停止	未

PostgreSQL_インストール	未
PostgreSQL_起動・停止	未

ログイン_MySQL			$ mysql -u myuser -pxxx mytable
ログイン_Oracle			$ sqlplus
ログイン_PostgreSQL		$ psql mydatabase myuser
ログイン_SQLite			$ sqlite3

ログアウト_MySQL		sql> quit
ログアウト_Oracle		sql> quit
ログアウト_PostgreSQL	sql> \q
ログアウト_SQLite		sql> .exit

管理ログイン_MySQL		# mysql
管理ログイン_Oracle		未
管理ログイン_PostgreSQL	未
管理ログイン_SQLite		$ sqlite3 mydatabase.sqlite3

# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
# ユーザ管理
# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
ユーザ作成_MySQL		CREATE USER 'myuser'@'myhost';
						CREATE USER 'myuser'@'myhost' IDENTIFIED BY 'xxx';
ユーザ作成_Oracle		CREATE USER 'myuser' IDENTIFIED BY "xxx"
							DEFAULT TABLESPACE users;
ユーザ作成_PostgreSQL	(ロール) CREATE ROLE myrole WITH LOGIN;
						(ロール) CREATE ROLE myrole WITH LOGIN PASSWORD 'xxx';
ユーザ作成_SQLite		-

ユーザ削除_MySQL		DROP USER 'myuser'@'myhost';
ユーザ削除_Oracle		DROP USER 'myuser';
						DROP USER 'myuser' CASCADE; # 対象ユーザが所有するオブジェクトごと削除する
ユーザ削除_PostgreSQL	(ロール) DROP ROLE myrole;
ユーザ削除_SQLite		-

ユーザ一覧_MySQL		SELECT User, Host from mysql.user;
ユーザ一覧_Oracle		SELECT * FROM user_users; # -- ユーザ自身
						SELECT * FROM dba_users; # -- 全てのユーザ
						SELECT * FROM all_users; # -- 全てのユーザ
ユーザ一覧_PostgreSQL	select usename from pg_user;
						(ロール) select rolname from pg_roles;
ユーザ一覧_SQLite		-



# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
# データベース管理
# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
データベース作成_MySQL		sql> CREATE DATABASE mydatabase;
データベース作成_Oracle		-
データベース作成_PostgreSQL	sql> CREATE DATABASE mydatabase;
データベース作成_SQLite		$ sqlite3 mydatabase.sqlite3

データベース削除_MySQL		sql> DROP DATABASE mydatabase;
データベース削除_Oracle		-
データベース削除_PostgreSQL	sql> DROP DATABASE mydatabase;
データベース削除_SQLite		-

データベース一覧_MySQL		sql> SHOW DATABASES;
データベース一覧_Oracle		-
データベース一覧_PostgreSQL	sql> \l;
データベース一覧_SQLite		-


# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
# テーブル管理
# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
MySQL_テーブル作成
	CREATE TABLE mytable(
	id INT NOT NULL AUTO_INCREMENT,
		ColA VARCHAR2(5)
	);
MySQL_テーブル削除		DROP TABLE mytable;
MySQL_テーブル変更		ALTER TABLE mytable CHANGE ColA ColX VARCHAR2(10);
Oracle_テーブル作成
	CREATE TABLE mytable(
		id INT NOT NULL AUTO_INCREMENT,
		ColA VARCHAR2(5)
	);
Oracle_テーブル削除		DROP TABLE mytable;
Oracle_テーブル変更		ALTER TABLE mytable CHANGE ColA ColX VARCHAR2(10);
PostgreSQL_テーブル作成
	CREATE TABLE mytable(
		id INT NOT NULL AUTO_INCREMENT,
		ColA VARCHAR2(5)
	);
PostgreSQL_テーブル削除	DROP TABLE mytable;
PostgreSQL_テーブル変更	ALTER TABLE mytable CHANGE ColA ColX VARCHAR2(10);


# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
# メタ
# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
テーブル定義表示_MySQL		DESC mytable;
テーブル定義表示_Oracle		DESC mytable;
テーブル定義表示_PostgreSQL	\d mytable;
テーブル定義表示_SQLite		.schema mytable;

テーブル一覧表示_MySQL		SHOW TABLES;
テーブル一覧表示_Oracle		SELECT TABLE_NAME FROM USER_TABLES;
テーブル一覧表示_PostgreSQL	\dt;
テーブル一覧表示_SQLite		.tables;

# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
# テーブル操作
# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
MySQL_選択			SELECT * FROM mytable;
MySQL_挿入			INSERT INTO mytable(ColA, ColB) VALUES('XX', 'YY');
MySQL_更新			UPDATE mytable SET ColA = 'XX' WHERE ColB = 'YY';
MySQL_削除			DELETE FROM mytable WHERE ColA = 'XX';
Oracle_選択			SELECT * FROM mytable;
Oracle_挿入			INSERT INTO mytable(ColA, ColB) VALUES('XX', 'YY');
Oracle_更新			UPDATE mytable SET ColA = 'XX' WHERE ColB = 'YY';
Oracle_削除			DELETE FROM mytable WHERE ColA = 'XX';
PostgreSQL_選択		SELECT * FROM mytable;
PostgreSQL_挿入		INSERT INTO mytable(ColA, ColB) VALUES('XX', 'YY');
PostgreSQL_更新		UPDATE mytable SET ColA = 'XX' WHERE ColB = 'YY';
PostgreSQL_削除		DELETE FROM mytable WHERE ColA = 'XX';

# LIMIT とか

# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
# テーブル操作その他 (連番等)
# -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- #
MySQL_連番
	CREATE TABLE mytable(
		id INT NOT NULL AUTO_INCREMENT,
		ColA VARCHAR2(5)
	);
	INSERT INTO mytable(ColA) VALUES('XX');

Oracle_連番
	(Case A: MAX を使う)
	CREATE TABLE mytable(
		id NUMBER NOT NULL,
		ColA VARCHAR2(5)
	);
	INSERT INTO mytable(id, ColA) SELECT MAX(id) + 1, 'XX' FROM mytable;

	(Case A2: MAX を使う。テーブルが空のケースも考える)
	CREATE TABLE mytable(
		id NUMBER NOT NULL,
		ColA VARCHAR2(5)
	);
	INSERT INTO mytable(id, ColA)
		SELECT
			CASE
				WHEN MAX(id) IS NULL THEN 1
				ELSE MAX(id)+1
			END,
			'XX' FROM mytable;

	(Case B: SEQUENCE を作って手動で埋め込む)
	CREATE TABLE mytable(
		id NUMBER NOT NULL,
		ColA VARCHAR2(5)
	);
	CREATE SEQUENCE myseq;
	INSERT INTO mytable(id, ColA) VALUES(myseq.NEXTVAL, 'XX');

	(Case C: SEQUENCE を作って TRIGGER で埋め込む)
	CREATE TABLE mytable(
		id NUMBER NOT NULL,
		ColA VARCHAR2(5)
	);
	CREATE SEQUENCE myseq;
	CREATE OR REPLACE TRIGGER mytrig
	BEFORE INSERT ON mytable FOR EACH ROW
	BEGIN
		SELECT myseq.NEXTVAL INTO :NEW.id FROM DUAL;
	END;
	INSERT INTO mytable(ColA) VALUES('XX');

PostgreSQL_連番
	CREATE TABLE mytable(
		id <red>serial</red> NOT NULL,
		ColA character
	);
	INSERT INTO mytable(ColA) VALUES('XX');

SQLite_連番
	CREATE TABLE mytable(
		id INTEGER AUTOINCREMENT,
		ColA VARCHAR2(5)
	);
	INSERT INTO mytable(ColA) VALUES('XX');
